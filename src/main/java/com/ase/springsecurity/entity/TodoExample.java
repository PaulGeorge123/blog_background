package com.ase.springsecurity.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class TodoExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table todo
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table todo
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table todo
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table todo
     *
     * @mbggenerated
     */
    public TodoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table todo
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table todo
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table todo
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table todo
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table todo
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table todo
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table todo
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table todo
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table todo
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table todo
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table todo
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andTodoIsNull() {
            addCriterion("todo is null");
            return (Criteria) this;
        }

        public Criteria andTodoIsNotNull() {
            addCriterion("todo is not null");
            return (Criteria) this;
        }

        public Criteria andTodoEqualTo(String value) {
            addCriterion("todo =", value, "todo");
            return (Criteria) this;
        }

        public Criteria andTodoNotEqualTo(String value) {
            addCriterion("todo <>", value, "todo");
            return (Criteria) this;
        }

        public Criteria andTodoGreaterThan(String value) {
            addCriterion("todo >", value, "todo");
            return (Criteria) this;
        }

        public Criteria andTodoGreaterThanOrEqualTo(String value) {
            addCriterion("todo >=", value, "todo");
            return (Criteria) this;
        }

        public Criteria andTodoLessThan(String value) {
            addCriterion("todo <", value, "todo");
            return (Criteria) this;
        }

        public Criteria andTodoLessThanOrEqualTo(String value) {
            addCriterion("todo <=", value, "todo");
            return (Criteria) this;
        }

        public Criteria andTodoLike(String value) {
            addCriterion("todo like", value, "todo");
            return (Criteria) this;
        }

        public Criteria andTodoNotLike(String value) {
            addCriterion("todo not like", value, "todo");
            return (Criteria) this;
        }

        public Criteria andTodoIn(List<String> values) {
            addCriterion("todo in", values, "todo");
            return (Criteria) this;
        }

        public Criteria andTodoNotIn(List<String> values) {
            addCriterion("todo not in", values, "todo");
            return (Criteria) this;
        }

        public Criteria andTodoBetween(String value1, String value2) {
            addCriterion("todo between", value1, value2, "todo");
            return (Criteria) this;
        }

        public Criteria andTodoNotBetween(String value1, String value2) {
            addCriterion("todo not between", value1, value2, "todo");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Integer value) {
            addCriterion("status =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Integer value) {
            addCriterion("status <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Integer value) {
            addCriterion("status >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("status >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Integer value) {
            addCriterion("status <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Integer value) {
            addCriterion("status <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Integer> values) {
            addCriterion("status in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Integer> values) {
            addCriterion("status not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Integer value1, Integer value2) {
            addCriterion("status between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("status not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andDatedayIsNull() {
            addCriterion("dateDay is null");
            return (Criteria) this;
        }

        public Criteria andDatedayIsNotNull() {
            addCriterion("dateDay is not null");
            return (Criteria) this;
        }

        public Criteria andDatedayEqualTo(Date value) {
            addCriterion("dateDay =", value, "dateday");
            return (Criteria) this;
        }

        public Criteria andDatedayNotEqualTo(Date value) {
            addCriterion("dateDay <>", value, "dateday");
            return (Criteria) this;
        }

        public Criteria andDatedayGreaterThan(Date value) {
            addCriterion("dateDay >", value, "dateday");
            return (Criteria) this;
        }

        public Criteria andDatedayGreaterThanOrEqualTo(Date value) {
            addCriterion("dateDay >=", value, "dateday");
            return (Criteria) this;
        }

        public Criteria andDatedayLessThan(Date value) {
            addCriterion("dateDay <", value, "dateday");
            return (Criteria) this;
        }

        public Criteria andDatedayLessThanOrEqualTo(Date value) {
            addCriterion("dateDay <=", value, "dateday");
            return (Criteria) this;
        }

        public Criteria andDatedayIn(List<Date> values) {
            addCriterion("dateDay in", values, "dateday");
            return (Criteria) this;
        }

        public Criteria andDatedayNotIn(List<Date> values) {
            addCriterion("dateDay not in", values, "dateday");
            return (Criteria) this;
        }

        public Criteria andDatedayBetween(Date value1, Date value2) {
            addCriterion("dateDay between", value1, value2, "dateday");
            return (Criteria) this;
        }

        public Criteria andDatedayNotBetween(Date value1, Date value2) {
            addCriterion("dateDay not between", value1, value2, "dateday");
            return (Criteria) this;
        }

        public Criteria andLogicRemoveIsNull() {
            addCriterion("logic_remove is null");
            return (Criteria) this;
        }

        public Criteria andLogicRemoveIsNotNull() {
            addCriterion("logic_remove is not null");
            return (Criteria) this;
        }

        public Criteria andLogicRemoveEqualTo(Integer value) {
            addCriterion("logic_remove =", value, "logicRemove");
            return (Criteria) this;
        }

        public Criteria andLogicRemoveNotEqualTo(Integer value) {
            addCriterion("logic_remove <>", value, "logicRemove");
            return (Criteria) this;
        }

        public Criteria andLogicRemoveGreaterThan(Integer value) {
            addCriterion("logic_remove >", value, "logicRemove");
            return (Criteria) this;
        }

        public Criteria andLogicRemoveGreaterThanOrEqualTo(Integer value) {
            addCriterion("logic_remove >=", value, "logicRemove");
            return (Criteria) this;
        }

        public Criteria andLogicRemoveLessThan(Integer value) {
            addCriterion("logic_remove <", value, "logicRemove");
            return (Criteria) this;
        }

        public Criteria andLogicRemoveLessThanOrEqualTo(Integer value) {
            addCriterion("logic_remove <=", value, "logicRemove");
            return (Criteria) this;
        }

        public Criteria andLogicRemoveIn(List<Integer> values) {
            addCriterion("logic_remove in", values, "logicRemove");
            return (Criteria) this;
        }

        public Criteria andLogicRemoveNotIn(List<Integer> values) {
            addCriterion("logic_remove not in", values, "logicRemove");
            return (Criteria) this;
        }

        public Criteria andLogicRemoveBetween(Integer value1, Integer value2) {
            addCriterion("logic_remove between", value1, value2, "logicRemove");
            return (Criteria) this;
        }

        public Criteria andLogicRemoveNotBetween(Integer value1, Integer value2) {
            addCriterion("logic_remove not between", value1, value2, "logicRemove");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table todo
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table todo
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}